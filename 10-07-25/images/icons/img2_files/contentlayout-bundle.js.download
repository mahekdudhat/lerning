"use strict";var Dell=window.Dell||{};Dell.Campaign=Dell.Campaign||{},Dell.Campaign.Webparts=Dell.Campaign.Webparts||{},Dell.Campaign.Webparts.ContentLayout=Dell.Campaign.Webparts.ContentLayout||{},function(){(function(){"use strict";// INTERSECTION OBSERVER END
function a(a){h(a,"PDP-ContentLayout-Viewed"),b(a)}function b(a){let b=$(a).find(".rwp-self-contained-video");0<b.length&&b.each(function(){const a=$(this).find("brightcove-video"),b=a.data("object");if(b){b.Id=a.attr("id"),Dell.BrightcoveMFE.brightcoveLoader.init(b);const d=$(this);c(d)}})}function c(a){const b=setInterval(()=>{const c=a.find("video"),e=c.attr("id");if(0<c.length&&e){const a=videojs.getPlayer(e);a?(clearInterval(b),d(a)):console.log("Video player is not initialized.")}},2e3)}function d(a){a.ready(()=>{const b=e();b.onclick=()=>f(a,b);const c=a.el().parentElement.parentElement;c.appendChild(b),a.muted(!0),a.controls(!1),a.play(),b.innerHTML=j,g(a)})}function e(){const a=document.createElement("button");return a.setAttribute("aria-hidden","true"),a.setAttribute("data-view",1024>window.innerWidth?"mobile":"desktop"),a.className="bgvideoButton",a}function f(a,b){const c=a.paused();c?(a.play(),b.innerHTML=j):(a.pause(),b.innerHTML=k)}function g(a){a.on("ended",()=>{a.currentTime(0),a.play()})}function h(a,b){var c=a.closest(".cp-container")?.id,d=new CustomEvent("ADBUserActionTracker",{bubbles:!0,detail:{type:"focusMetrics",metrics:{btnname:b,containerId:c}}});document.dispatchEvent(d)}console.log("Load Content Layout JS");const i=document.querySelectorAll(".rwp-contentlayout"),j="<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 173 173\"><path d=\"M86.5,0C38.7,0,0,38.7,0,86.5S38.7,173,86.5,173S173,134.3,173,86.5S134.3,0,86.5,0z M74.6,124.9H59.8V51h14.8 V124.9z M113.1,124.9H98.3V51h14.8V124.9z\"/></svg>",k="<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 173 173\"><path d=\"M86.5,0C38.7,0,0,38.7,0,86.5S38.7,173,86.5,173S173,134.3,173,86.5S134.3,0,86.5,0z M67.1,124.7V50.8 l59.2,36.9L67.1,124.7z\"/></svg>";// INTERSECTION OBSERVER START
var l=new IntersectionObserver(function(b,c){b.forEach(b=>{var d=b.target||b;b.isIntersecting&&(a(d),c.unobserve(d))})},{rootMargin:"200px 0px",threshold:.01});i.forEach(b=>{"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype?l.observe(b):a(b)})}).call(Dell.Campaign.Webparts.ContentLayout)}(window,document);var Dell=window.Dell||{};Dell.Campaign=Dell.Campaign||{},Dell.Campaign.Webparts=Dell.Campaign.Webparts||{},Dell.Campaign.Webparts.Shared=Dell.Campaign.Webparts.Shared||{},Dell.Campaign.Webparts.Shared.Video=Dell.Campaign.Webparts.Shared.Video||{};var $j=window.jQuery;window.UW=window.UW||{},function(){(function(){"use strict";console.log("Load Brightcove Video JS"),$(document).ready(function(){$(".rwp-video").parent(":not(.rwp-self-contained-video)").on("click",function(){var a=$(this).find("brightcove-video").data("object");console.log(a),Dell.BrightcoveMFE.brightcoveLoader.init(a)})})}).call(Dell.Campaign.Webparts.Shared.Video)}(window,document);var Dell=window.Dell||{};Dell.Campaign=Dell.Campaign||{},Dell.Campaign.Webparts=Dell.Campaign.Webparts||{},Dell.Campaign.Webparts.Shared=Dell.Campaign.Webparts.Shared||{},Dell.Campaign.Webparts.Shared.Video=Dell.Campaign.Webparts.Shared.Video||{},Dell.Campaign.Webparts.Shared.Video.Youtube=Dell.Campaign.Webparts.Shared.Video.Youtube||{},function(){(function(){"use strict";function a(a){//check if api has been loaded and leverage YT.ready check for callback
var b="function"==typeof a;f||"undefined"!=typeof YT?b&&YT.ready(a):$.getScript("https://www.youtube.com/iframe_api",function(){f=!0,b&&YT.ready(a)})}//Had to change param type to the specific element
function b(a){//create the youtube player
//This is a change to the default media gallery code.  It used to accept e.  It was not working.  Now accepts the container as $el.
//var $el = $(e.currentTarget).find('.dell-media-youtube-video');
g=a.attr("id"),h[g]=new YT.Player(g,{videoId:g,playerVars:{autoplay:a.attr("data-autoplay"),//AUTOPLAY:  Set to 1 or 0
mute:a.attr("data-autoplay"),//AUTOPLAY:  Google will not allow unless "mute=1" is also set! 
cc_load_policy:a.attr("data-cc"),//note:  Default behavior is based on user preference. Setting this to 1 causes closed captions to be shown by default, even if the user has turned captions off.
modestbranding:1,loop:a.attr("data-loop"),//LOOP:  To loop a single video, set the loop parameter value to 1 --> AND
playlist:a.attr("data-playlist"),//LOOP:  For Loop: Set the playlist parameter value to the same video ID
start:a.attr("data-start"),end:a.attr("data-end"),rel:a.attr("data-rel")//note:  You cannot disable related videos. If 0, related videos will come from the same channel as the video that was just played.
},events:{onReady:d,onStateChange:e}})}function c(){$(".dell-media-youtube-container[data-state=\"playing\"]").attr("data-state","paused").each(function(){var a=$(this).find("iframe").attr("id");h[a]&&h[a].pauseVideo()})}function d(a){//update Dell.Metrics with the correct data for the video
//play video immediately when ready
var b=a.target.getVideoData().video_id;//stop other players
//pauseAllVideos();
$(document).trigger("pauseAllVideos"),$("#"+b).parent().attr("data-state","playing"),a.target.playVideo()}function e(a){//only allow 1 video to play at a time
var b=a.target.getVideoData().video_id;//update Dell.Metrics with the correct data for the video
//80% viewed
a.data===YT.PlayerState.PLAYING&&g!==b&&($(document).trigger("pauseAllVideos"),g=b,$("#"+b).parent().attr("data-state","playing")),a.data===YT.PlayerState.PAUSED&&($("#"+b).parent().attr("data-state","paused"),g===b&&(g=""))}//Add a callback function to locate and run the first video with auto-play turned on...
console.log("Load Youtube Video JS");var f=!1,g="",h={};(function e(d){//Default layout only includes the thumbnail and the play button
//Play button triggers YouTube api calls to initialize the player on demand
//From Media Gallery
//The .one() method is identical to .on(), except that the handler for a given element and event type is unbound after its first invocation
//$(document).one('click', '.dell-media-youtube-container', function (e) {
//This is a change to the default media gallery code. It used to use the .one() method, but that was not allowing a second video to play...  
$(document).on("click",".dell-media-youtube-container",function(c){c.preventDefault(),$(c.currentTarget).attr("data-state","loading");//This is a change to the default code from media gallery. Don't let this button come back.  Once the player has started, the player's controls take over.
const d=$(c.currentTarget).find(".rwp-youtube-play-button");d.hide();//This is a change to the default js code from media gallery.  With multiple players, their code was finding the wrong one.
var e=$(c.currentTarget).find(".dell-media-youtube-video");a(function a(){b(e)})}).on("pauseAllVideos",c),d()})(function(){$(document).find(".rwp-youtube-play-button.1").first().trigger("click")})}).call(Dell.Campaign.Webparts.Shared.Video.Youtube)}(window,document);var Dell=window.Dell||{};Dell.Campaign=Dell.Campaign||{},Dell.Campaign.Webparts=Dell.Campaign.Webparts||{},Dell.Campaign.Webparts.Shared=Dell.Campaign.Webparts.Shared||{},Dell.Campaign.Webparts.Shared.Video=Dell.Campaign.Webparts.Shared.Video||{},Dell.Campaign.Webparts.Shared.Video.Youku=Dell.Campaign.Webparts.Shared.Video.Youku||{},function(a,b,c){(function(){"use strict";function b(b){//check if api has been loaded and then trigger callback function
var c="function"==typeof b;g||"undefined"!=typeof YKP?c&&b():a.getScript("//player.youku.com/jsapi",function(){g=!0,c&&b()})}function d(d){a(c).on("click.youku",".rwp-youku-container",function(c){var d=a(this),e=d.height(),g=d.width();//Make player fill it's container
if(c.preventDefault(),!i[d.attr("id")]){//This is a change to the default code from media gallery. Don't let this button or image come back.  Once the player has started, the player's controls take over.
const i=a(c.currentTarget).find(".rwp-youku-play-button");var h=d.find(".rwp-image");i.hide(),b(function a(){f(d,e,g,h)})}})}function e(a){console.log("YouKu - PLAYER READY")}function f(a,b,c,d){var f="False"!==a.attr("data-rel"),g=a.attr("id");d.hide(),i[g]=new YKU.Player(g,{styleid:"0",client_id:"699bf17c39c022b1",vid:g,show_related:f,autoplay:!0,newPlayer:!0,height:b,width:c,events:{onPlayerReady:function(){e(g)}}})}console.log("Load YouKu Video JS");var g=!1,i={};d()}).call(Dell.Campaign.Webparts.Shared.Video.Youku)}(jQuery,window,document);var Dell=window.Dell||{};Dell.Campaign=Dell.Campaign||{},Dell.Campaign.Webparts=Dell.Campaign.Webparts||{},Dell.Campaign.Webparts.Shared=Dell.Campaign.Webparts.Shared||{},Dell.Campaign.Webparts.Shared.Audio=Dell.Campaign.Webparts.Shared.Audio||{},function(a,b){(function(){"use strict";function a(a){let b=document.querySelectorAll("video"),c=document.querySelectorAll("audio");//Check videos and audios seperately so we can avoid pausing videos in the background or that don't have sound
b.forEach(b=>{b.paused||b.muted||b===a||b.pause()}),c.forEach(b=>{b.paused||b===a||b.pause()})}console.log("Load Audio JS");let b=document.querySelectorAll("audio, video"),c=document.querySelectorAll(".rwp-audio-transcript-button");c.forEach(a=>{a.transcript=a.nextElementSibling,a.addEventListener("click",b=>{"false"===a.getAttribute("aria-expanded")?(a.transcript.style="",a.setAttribute("aria-expanded","true"),a.transcript.setAttribute("aria-hidden","false")):(a.transcript.style.display="none",a.setAttribute("aria-expanded","false"),a.transcript.setAttribute("aria-hidden","true"))})}),b.forEach(b=>{b.addEventListener("play",()=>{a(b)})})}).call(Dell.Campaign.Webparts.Shared.Audio)}(window,document);